generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement())
  username       String        @unique
  skills         String[]
  projects       Json
  resume         String
  description    String
  profilePicture String
  ratings        Float
  bounties       Bounty[]      @relation("UserBounties")
  applications   Application[]
  submission     Submission[]
}

model Bounty {
  id               Int           @id @default(autoincrement())
  title            String
  description      String
  category         String
  promptFile       String
  budget           Float
  postedOn         DateTime      @default(now())
  skillsRequired   String[]
  status           String        @default("pending")
  postedBy         User          @relation("UserBounties", fields: [postedByUsername], references: [username])
  postedByUsername String
  applications     Application[]
  submissions      Submission[]
  transaction      Transactions? @relation
}

model Application {
  id                Int          @id @default(autoincrement())
  coverLetter       String
  resume            String
  status            String       @default("pending")
  bounty            Bounty       @relation(fields: [bountyId], references: [id])
  bountyId          Int
  applicant         User         @relation(fields: [applicantUsername], references: [username])
  applicantUsername String
  submission        Submission[]
  appliedOn         DateTime     @default(now())
}

model Submission {
  id                Int         @id @default(autoincrement())
  submissionFile    String
  submissionDetails String
  status            String      @default("pending")
  application       Application @relation(fields: [applicationId], references: [id])
  applicationId     Int
  bounty            Bounty      @relation(fields: [bountyId], references: [id])
  bountyId          Int
  applicant         User        @relation(fields: [applicantUsername], references: [username])
  applicantUsername String
  submittedOn       DateTime    @default(now())
}

model Transactions {
  id            Int      @id @default(autoincrement())
  transactionId String
  From          String
  amount        Float
  timestamp     DateTime @default(now())
  bounty        Bounty   @relation(fields: [bountyId], references: [id])
  bountyId      Int      @unique
  bountyStatus  String   @default("pending")
  freelancer    String?
}
